name: zz aarch64 kernel build
run-name: kernel from ${{ inputs.source-repo }}@${{ inputs.source-ref }}

on:
  workflow_call:
    inputs:
      source-repo:
        required: true
        type: string
      source-ref:
        required: true
        type: string
      kernel-config:
        required: false
        default: "kernel.config"
        type: string
    outputs:
      release:
        description: "uname -r"
        value: ${{ jobs.build.outputs.kernelrelease }}
      artifact:
        description: "uname -r"
        value: linux-${{ jobs.build.outputs.kernelrelease }}

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: [self-hosted, linux, x64, debian, nonpriv]
    outputs:
      kernelrelease: ${{ steps.build.outputs.kernelrelease }}
    steps:
      - name: Install toolchain
        id: toolchain
        run: |
          sudo apt-get -yq update && sudo apt-get -yq upgrade
          sudo apt-get -yq install build-essential crossbuild-essential-arm64 device-tree-compiler \
            autoconf bc bison flex cpio dkms fakeroot kmod quilt rsync dh-exec apt-utils \
            libssl-dev libncurses-dev libelf-dev libudev-dev libpci-dev libiberty-dev

      - name: Clone kernel repository
        id: get-linux
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.source-repo }}
          ref: ${{ inputs.source-ref }}
          path: linux

      - name: Download kernel config
        id: get-config
        uses: actions/download-artifact@v4
        with:
          name: kernel-config
          path: linux

      - name: Configure kernel
        id: configure
        working-directory: linux
        run: |
          mv ${{ inputs.kernel-config }} .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig

      - name: Build kernel
        id: build
        working-directory: linux
        run: |
          make -j$(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg
          echo "kernelrelease=$(make -s kernelrelease)" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v3
        with:
          name: linux-${{ steps.build.outputs.kernelrelease }}
          path: |
            linux-*.deb
            linux/*.tar*
          retention-days: 60
          if-no-files-found: error
