name: zz rockchip u-boot build

on:
  workflow_call:
    inputs:
      source-repo:
        required: true
        type: string
      source-ref:
        required: true
        type: string
      board:
        required: true
        type: string
      config:
        required: true
        type: string
      envfile:
        required: true
        type: string
      make-target:
        required: true
        type: string
    outputs:
      artifact-name:
        description: "output artifact name"
        value: ${{ jobs.build.outputs.artifact }}
      fw-blob:
        description: "firmware blob name"
        value: ${{ jobs.build.outputs.fw-blob }}

env:
  loader-bin: idblock.bin
  u-boot-bin: uboot.img
  fw-blob-name: firmware-${{ inputs.board }}
  artifact-days: 90

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      artifact: ${{ env.artifact-name }}
      fw-blob: ${{ env.fw-blob-name }}.gz
    steps:
      - name: Install toolchain
        id: toolchain
        run: |
          sudo apt -y update
          sudo apt -y install build-essential crossbuild-essential-arm64 device-tree-compiler

      - name: Clone toolchain repository
        id: get-toolchain
        uses: actions/checkout@v3
        with:
          repository: neggles/sbci-toolchains
          ref: u-boot-rockchip
          path: toolchain

      - name: Clone rkbin repository
        id: get-rkbin
        uses: actions/checkout@v3
        with:
          repository: rockchip-linux/rkbin
          path: rkbin

      - name: Clone u-boot repository
        id: get-uboot
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.source-repo }}
          ref: ${{ inputs.source-ref }}
          path: u-boot

      - name: Download u-boot config
        id: get-config
        uses: actions/download-artifact@v3
        with:
          name: u-boot-configs
          path: configs

      - name: Build u-boot
        id: build
        working-directory: u-boot
        run: |
          cp -L ../configs/${{ inputs.config }} ./.config
          make oldconfig
          ./make.sh ${{ inputs.make-target }}

      - name: Assemble firmware blob
        id: blorb
        working-directory: u-boot
        run: |
          fallocate -l32m ${{ env.fw-blob-name }}
          dd if=${{ env.loader-bin }} of=${{ env.fw-blob-name }} conv=notrunc bs=32K seek=1
          dd if=${{ env.u-boot-bin }} of=${{ env.fw-blob-name }} conv=notrunc bs=32K seek=256
          gzip ${{ env.fw-blob-name }}

      - name: Generate u-boot environment
        id: mkenvimage
        if: ${{ inputs.envfile != '' }}
        working-directory: u-boot
        run: |
          echo "::warning:: envfile handling not implemented yet"

      - name: Upload build outputs
        id: upload-u-boot
        uses: actions/upload-artifact@v3
        with:
          name: u-boot-${{ inputs.board }}
          path: |
            u-boot/${{ env.loader-bin }}
            u-boot/${{ env.u-boot-bin }}
            u-boot/*_spl_loader_*.bin
            u-boot/${{ env.fw-blob-name }}.gz
          retention-days: ${{ env.artifact-days }}
          if-no-files-found: error
