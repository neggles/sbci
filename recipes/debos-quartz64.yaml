{{- $architecture := or .architecture "arm64" -}}
{{- $soc := or .soc "rk3566" -}}
{{- $board := or .board "noboard" -}}
{{- $firmware := or .firmware (printf "firmware-%s" $board) -}}
{{- $devicetree := or .devicetree (printf "rockchip/%s-%s.dtb" $soc $board) -}}

{{- $suite := or .suite "bookworm" -}}
{{- $mirror := or .mirror "https://ftp.debian.org/debian/" -}}
{{- $hostname := or .hostname $board -}}
{{- $username := or .username "debiant" -}}
{{- $password := or .password "debiant" -}}
{{- $image := or .image (printf "debiant-%s-%s-%s.img" $suite $architecture $board) -}}

architecture: {{ $architecture }}

actions:
  - action: debootstrap
    suite: {{ $suite }}
    keyring-package: debian-keyring
    components:
      - main
      - contrib
      - non-free
      - non-free-firmware
    mirror: {{ $mirror }}

  - action: apt
    description: Install usr-is-merged
    update: false
    packages: [usr-is-merged]

  - action: apt
    description: Install apt-transport-https and dependencies
    recommends: false
    packages:
      - apt-transport-https
      - ca-certificates
      - gnupg2
      - curl
      - wget

  - action: apt
    description: Install additional utilities
    recommends: true
    packages:
      - lsb-release
      - sudo
      - u-boot-menu
      - u-boot-tools
      - initramfs-tools
      - parted
      - util-linux
      - dosfstools
      - bash-completion
      - xz-utils
      - zstd
      - nano

  - action: apt
    description: Install networking packages
    recommends: true
    packages:
      - bluetooth
      - netbase
      - net-tools
      - libnss-resolve
      - task-ssh-server
      - netplan.io

  - action: apt
    description: Install wireless networking packages
    recommends: true
    packages:
      - bluez-firmware
      - firmware-brcm80211
      - wireless-regdb
      - wireless-tools
      - wpasupplicant
      - iw

  - action: run
    description: Install standard system utilities
    chroot: true
    command: |
      apt-get -y update
      apt-get -y install $(dpkg-query -W -f'${Package}\t${Priority}\n' | awk '/standard$/ {printf "%s ", $1}')
      apt-get -y install $(dpkg-query -W -f'${Package}\t${Priority}\n' | awk '/important$/ {printf "%s ", $1}')

  - action: overlay
    description: Add apt repository configuration
    source: overlays/apt
    destination: /etc/apt

  - action: overlay
    description: Copy kernel package
    source: kernel
    destination: /usr/local/kernel

  - action: run
    description: Install kernel package
    chroot: true
    command: |
      rm /usr/local/kernel/*-dbg_*.deb
      DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true apt -yq install /usr/local/kernel/*.deb
      rm -fr /usr/local/kernel

  - action: overlay
    description: Copy u-boot files
    source: u-boot
    destination: /boot/firmware

  - action: run
    description: U-Boot menu update
    chroot: true
    script: scripts/setup-u-boot.sh '{{ $devicetree }}' arm64

  - action: run
    description: Set up user
    chroot: true
    script: scripts/setup-user.sh '{{ $username }}' '{{ $password }}'

  - action: overlay
    description: Add network configuration
    source: overlays/netplan
    destination: /etc/netplan

  - action: run
    description: Set up networking
    chroot: true
    script: scripts/setup-networking.sh '{{ $hostname }}'

  - action: overlay
    description: Add systemd unit files
    source: overlays/systemd
    destination: /etc/systemd

  - action: run
    description: EnableSSH key regeneration unit
    chroot: true
    command: |
      mkdir -p /etc/systemd/system/multi-user.target.wants
      cd /etc/systemd/system/multi-user.target.wants
      ln -sf ../generate-ssh-host-keys.service

  - action: overlay
    description: Add systemd-repart configuration
    source: overlays/repart.d
    destination: /etc/repart.d

  - action: overlay
    description: Add board-specific configuration
    source: quartz64
    destination: /

  - action: run
    description: Clear machine-id and misc files
    chroot: true
    command: |
      apt-get -y clean
      rm -f /etc/machine-id /var/lib/dbus/machine-id /var/lib/systemd/random-seed
      rm -f /var/log/*.log /var/log/apt/*.log
      rm -rf /var/lib/apt/lists/*

  - action: image-partition
    description: Creating image partitions
    imagename: {{ $image }}
    imagesize: 4GiB
    partitiontype: gpt
    mountpoints:
      - mountpoint: /
        partition: root
        options: ["discard", "noatime", "x-systemd.growfs"]
      - mountpoint: /boot/recovery
        partition: recovery
        options: ["discard", "noatime", "x-systemd.automount" ]
    partitions:
      - name: firmware
        fs: none
        start: 64s
        end: 32MiB
      - name: recovery
        partlabel: RECOVERY
        fs: vfat
        start: 32MiB
        end: 320MiB
      - name: root
        partlabel: rootfs
        fs: ext4
        start: 320MiB
        end: 100%
        parttype: "b921b045-1df0-41c3-af44-4c6f280d3fae" # aarch64 rootfs
        flags: [ boot ]

  - action: filesystem-deploy
    description: Deploying filesystem onto image
    setup-fstab: false
    setup-kernel-cmdline: false

  - action: raw
    description: Deploy firmware and u-boot
    origin: recipe
    source: u-boot/{{ $firmware }}.bin
    partition: firmware

  - action: run
    description: Create block map file
    postprocess: true
    command: |
      echo "ARTIFACTDIR=$ARTIFACTDIR"
      echo "IMAGE=$IMAGE"
      ls -alh $ARTIFACTDIR
      ls -alh .
      bmaptool create "$ARTIFACTDIR/{{ $image }}" > "$ARTIFACTDIR/{{ $image }}.bmap"

  - action: run
    description: Compress final image
    postprocess: true
    command: zstd -T0 -11 --rm "$ARTIFACTDIR/{{ $image }}"
